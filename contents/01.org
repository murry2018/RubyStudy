* Syntax
:PROPERTIES:
:header-args:ruby: :results output
:header-args:ruby: :session *sess*
:END:

** 띄어쓰기
루비 함수는 괄호 없이 띄어쓰기로 인자를 전달 할 수 있다.

#+BEGIN_SRC ruby :exports both
  puts "Hello, Ruby!"
#+END_SRC

#+RESULTS:
: Hello, Ruby!

따라서 다음과 같이 모호한 구문이 발생하지 않도록 주의하여야 한다(=-w=
옵션을 통해 이런 모호한 경우를 잡아낼 수 있다고 한다).

#+BEGIN_SRC ruby :exports code
  a +b
#+END_SRC

** 개행

루비에서는 개행 또한 문법 요소이다. 세미콜론(=;=)과 개행으로 구문의
끝을 나타낸다. 그러나 연산자나 백슬래시(=\=)가 있을 경우 인터프리터는
표현식이 더 있을것이라 추론하고 다음 행도 함께 읽는다.

#+BEGIN_SRC ruby :results value :exports both
y = 1 + 2 \
  + 3
#+END_SRC

#+RESULTS:
: 6

** 식별자와 예약어

루비 식별자는 (유니코드를 포함한)Alphanumeric 문자와 밑줄 문자이다. 루비는 대소문자를 구별한다.

#+BEGIN_SRC ruby :results value :exports code
  딩동댕 = true
  땡 = false
#+END_SRC

다음은 루비에서 예약된 키워드의 목록이다.

| =BEGIN=    | =do=     | =next=   | =then=     |
| =END=      | =else=   | =nil=    | =true=     |
| =alias=    | =elsif=  | =not=    | =undef=    |
| =and=      | =end=    | =or=     | =unless=   |
| =begin=    | =ensure= | =redo=   | =until=    |
| =break=    | =false=  | =rescue= | =when=     |
| =case=     | =for=    | =retry=  | =while=    |
| =class=    | =if=     | =return= | =while=    |
| =def=      | =in=     | =self=   | =__FILE__= |
| =defined?= | =module= | =super=  | =__LINE__= |

** 셸 커맨드

백틱을 이용하여, 셸 커맨드를 실행하고 결과 가져오는 일을 아주 쉽게 할 수 있다.

#+BEGIN_SRC ruby :exports both
  mon = 12
  year = 1998
  puts `cal #{mon} #{year}`
#+END_SRC

#+RESULTS:
:       12월 1998     
: 일 월 화 수 목 금 토
:        1  2  3  4  5
:  6  7  8  9 10 11 12
: 13 14 15 16 17 18 19
: 20 21 22 23 24 25 26
: 27 28 29 30 31      
:                     

** Here Document

재미있게도, Here Document를 삽입할 수 있다. 긴 문자열을 편리하게
입력할 수 있다.

1. 기본적으로는 문자열(double-quoted) 형성

   #+BEGIN_SRC ruby :exports both
     puts <<EOF
       Long Long Line
     EOF
   #+END_SRC

   #+RESULTS:
   :   Long Long Line

2. 작은 따옴표, 백틱을 사용하는 heredocs
   #+BEGIN_SRC ruby :exports both
     puts <<'EOF'
       'Heredocs is cool!'
     EOF
     puts '---', <<`EOC`
     {
       echo Heredocs;
       echo is cool!;
     }
     EOC
   #+END_SRC

   #+RESULTS:
   :   'Heredocs is cool!'
   : ---
   : Heredocs
   : is cool!

3. heredocs의 결과에 메서드를 호출하거나, 다른 Heredocs에 쌓기

   #+BEGIN_SRC ruby :exports both
     print <<`EOC`.chomp,<<"EOF".strip
       wc -l /etc/passwd \
          | cut -f 1 -d ' '
     EOC
       명의 유저가 있습니다.
     EOF
   #+END_SRC

   #+RESULTS:
   : 49  명의 유저가 있습니다.

** src_text[:exports code]{BEGIN}과 =END=

=BEGIN= 블록은 스크립트의 가장 처음에 실행되고, =END= 블록은 가장
나중에 실행된다.

#+BEGIN_SRC ruby :session none :exports both
  END {
    puts 'Good bye!'
  }
  puts 'How are you?'
  BEGIN {
    puts 'Hello!'
  }
#+END_SRC

#+RESULTS:
: Hello!
: How are you?
: Good bye!

** 주석

#+BEGIN_SRC ruby :exports both
  puts 'test' # 한줄 주석은 이렇게 쓴다.
  =begin
   여러줄
   주석은
   이렇게
   쓴다.
  =end
#+END_SRC

#+RESULTS:
: test
